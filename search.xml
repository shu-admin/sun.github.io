<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>操作系统存储器管理（1）</title>
      <link href="/2021/11/29/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%98%E5%82%A8%E5%99%A8%E7%AE%A1%E7%90%86%EF%BC%881%EF%BC%89/"/>
      <url>/2021/11/29/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%98%E5%82%A8%E5%99%A8%E7%AE%A1%E7%90%86%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h5 id="存储器管理"><a href="#存储器管理" class="headerlink" title="存储器管理"></a>存储器管理</h5><h5 id="一、-内存（Memory）"><a href="#一、-内存（Memory）" class="headerlink" title="一、 内存（Memory）"></a>一、 内存（Memory）</h5><blockquote><p>程序必须装入内存才能被执行。</p><p>CPU直接访问的存储器只有<code>主存高速缓存</code>和<code>寄存器</code>。</p><p>cache位于主存和CPU寄存器之间，用于协调速度差异。</p></blockquote><h5 id="二、-程序执行过程"><a href="#二、-程序执行过程" class="headerlink" title="二、 程序执行过程"></a>二、 程序执行过程</h5><h6 id="2-1-编译"><a href="#2-1-编译" class="headerlink" title="2.1 编译"></a>2.1 编译</h6><ul><li>由编译程序将用户源代码编译成若干模块。</li></ul><h6 id="2-2-链接"><a href="#2-2-链接" class="headerlink" title="2.2 链接"></a>2.2 链接</h6><ul><li>链接程序将编译的一组目标模块及所需的库函数链接在一起，形成一个完整的装入模块。</li></ul><h6 id="2-3-装入"><a href="#2-3-装入" class="headerlink" title="2.3 装入"></a>2.3 装入</h6><ul><li><p>由装入程序将装入模块装入内存运行。</p></li><li><p>装入的三种方式：</p><ul><li><p>绝对装入</p><p>只适用于单道程序环境。</p><p>时间：<code>编译时</code></p></li><li><p>可重定位装入</p><p>装入时一次完成，也称静态重定位。</p><p>作业一旦进入内存，运行时地址不发生变化。</p><p>时间：<code>装入时</code></p></li><li><p>动态运行时装入</p><p>也称动态重定位。</p><p>需要<code>重定位寄存器</code>的支持。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211129105033250.png" alt="image-20211129105033250" style="zoom:50%;"></p><p>地址转换时间：<code>执行时</code></p></li></ul></li></ul><h5 id="三、逻辑地址和物理地址"><a href="#三、逻辑地址和物理地址" class="headerlink" title="三、逻辑地址和物理地址"></a>三、逻辑地址和物理地址</h5><blockquote><p>当装入程序将可执行代码装入内存时，必须通过地址转换将逻辑地址转为物理地址，称为地址重定位。</p></blockquote><ul><li><p>逻辑地址(Logical address)</p><p>由CPU产生。</p><p>在进程中的相对地址。</p></li><li><p>物理地址(Physical address)</p><p>内存地址，也称绝对地址。</p></li></ul><h5 id="四、-连续分配管理方式"><a href="#四、-连续分配管理方式" class="headerlink" title="四、 连续分配管理方式"></a>四、 连续分配管理方式</h5><h6 id="4-1-单一连续分配"><a href="#4-1-单一连续分配" class="headerlink" title="4.1 单一连续分配"></a>4.1 单一连续分配</h6><blockquote><p>内存分为系统区和用户区。</p><ol><li>系统区：操作系统使用，位于低地址部分</li><li>用户区： 出系统区外，用户使用的部分。</li></ol></blockquote><ul><li><p>特点：</p><p>简单，无<code>外部碎片</code></p><p>只能用于<code>单用户、单任务</code>的操作系统，有<code>内部碎片</code>，存储器利用率低。</p></li></ul><h6 id="4-2-固定分区分配"><a href="#4-2-固定分区分配" class="headerlink" title="4.2 固定分区分配"></a>4.2 固定分区分配</h6><blockquote><p>最简单的一种多道程序存储管理方式。将用户空间分为若干固定的区域，每个分区只有一个作业。</p></blockquote><p><strong>特点</strong>：</p><ul><li>缺乏灵活性</li><li>程序太小时，浪费内存，产生<code>内部碎片</code>。</li><li><p>程序过大时，装不下。</p><p><strong>数据结构：（分区说明表）</strong></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211129105548027.png" alt="image-20211129105548027" style="zoom:50%;"></p></li></ul><h6 id="4-3-动态分区分配"><a href="#4-3-动态分区分配" class="headerlink" title="4.3 动态分区分配"></a>4.3 动态分区分配</h6><blockquote><p>也称可变分区分配，事先不分配，等到进程进入内存时动态分配。</p></blockquote><p><strong>方法：</strong></p><ul><li>记录空闲内存使用情况的数据结构：<ul><li>空闲分区表</li><li>空闲分区链</li></ul></li><li>存储分配算法：</li><li>内存回收<ul><li>回收内存块前后无空闲</li><li>回收内存块前有空闲</li><li>回收内存块后有空闲</li><li>回收内存块前后都有空闲</li></ul></li></ul><h5 id="五、-内部碎片和外部碎片"><a href="#五、-内部碎片和外部碎片" class="headerlink" title="五、 内部碎片和外部碎片"></a>五、 内部碎片和外部碎片</h5><ul><li><p>内部碎片</p><blockquote><p>分配的内存空间比申请的内存大。</p></blockquote></li><li><p>外部碎片</p><blockquote><p>整个可用的内存空间可以满足一个请求，但它并不连续。</p><p>通过<code>紧凑</code>的方式处理外部碎片。</p></blockquote></li></ul><h5 id><a href="#" class="headerlink" title=" "></a> </h5>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程课程介绍</title>
      <link href="/2021/11/29/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%BF%B0/"/>
      <url>/2021/11/29/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h4><blockquote><p>无作业，有研讨，小组完成3个实验报告。 </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据链路层复习</title>
      <link href="/2021/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A03/"/>
      <url>/2021/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A03/</url>
      
        <content type="html"><![CDATA[<h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><h4 id="数据链路层的基本概念"><a href="#数据链路层的基本概念" class="headerlink" title="数据链路层的基本概念"></a>数据链路层的基本概念</h4><p><strong>协议数据单元：帧</strong></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114224039499.png" alt="image-20211114224039499"></p><h4 id="数据链路层使用的信道："><a href="#数据链路层使用的信道：" class="headerlink" title="数据链路层使用的信道："></a>数据链路层使用的信道：</h4><h5 id="点对点信道（PPP协议）"><a href="#点对点信道（PPP协议）" class="headerlink" title="点对点信道（PPP协议）"></a>点对点信道（PPP协议）</h5><h5 id="广播信道"><a href="#广播信道" class="headerlink" title="广播信道"></a>广播信道</h5><h4 id="数据链路层的三个基本问题"><a href="#数据链路层的三个基本问题" class="headerlink" title="数据链路层的三个基本问题"></a>数据链路层的三个基本问题</h4><h5 id="封装成帧（framing）"><a href="#封装成帧（framing）" class="headerlink" title="封装成帧（framing）"></a>封装成帧（framing）</h5><p>数据的传送以帧为单位，帧定界</p><p>在数据前后添加首部和尾部（用来帧定界）</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114224946812.png" alt="image-20211114224946812"></p><p><strong>帧定界的方法：</strong></p><p><strong>1.字节计数法：</strong></p><p><strong>2.字符填充法：</strong></p><p>使用ASCII码作为帧定界符，</p><p><strong>SOH</strong>（start of header）表示帧的开始</p><p><strong>EOT</strong>（end of transmission) 表示帧的结束</p><h5 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h5><p>数据部分与控制信息相同</p><blockquote><p>如果数据中出现SOH或者EOT时，则在前面添加<strong>转义字符“ESC”</strong> (1B)H.</p><p>如果数据中出现转义字符即出现(ESC ESC)时，则在其前面添加转义字符。</p></blockquote><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114230626163.png" alt="image-20211114230626163"></p><p><strong>3.比特填充法</strong>：</p><p><strong>帧定界符为01111110</strong></p><p>遇到5个1添加一个0</p><h5 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h5><p>纠错、检错（检查出有错误要么忽略，要么重传）</p><p>传输错误的比特占传输比特总数的比率称为<strong>误码率</strong>BER（bit error rate）</p><h6 id="检错码"><a href="#检错码" class="headerlink" title="检错码"></a><strong>检错码</strong></h6><ol><li><p><strong>奇偶校验码</strong></p><blockquote><p>奇校验：使1的个数成为奇数</p><p>偶校验：使1的个数为偶数</p></blockquote></li><li><p><strong>CRC</strong></p><p>循环冗余码（Cyclic Redundancy Check）</p><p>在传送的一组k位数据后加上n位冗余码一起发送。</p><p>冗余码的确定：</p><p>k位数据左移n位，除以长度为（n+1)的除数P，商Q，余数R即为冗余码,<strong>计算过程没有进位</strong></p><p><strong>冗余码也称为帧校验序列FCS</strong>（Frame Check Sequence）</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115001318079.png" alt="image-20211115001318079"></p><p>接收方将接受的帧除以除数P，余数R为0，则未出现差错。</p><p>否则出现差错，并丢弃。<strong>只能做到无差错接收，不是可靠传输。</strong>可靠传输需要确认和重传机制。</p><blockquote><p>P(x)生成多项式</p><p>M(x)信息多项式</p><p>R(x)冗余多项式</p><p>T(x)传输帧多项式</p></blockquote><p>差错：</p><p>帧丢失、帧重复、帧失序</p></li></ol><h6 id="纠错码"><a href="#纠错码" class="headerlink" title="纠错码"></a>纠错码</h6><p><strong>海明码</strong></p><p>在k比特信息上加上r位冗余信息，使得校验比特和信息比特构成<strong>偶校验</strong>。</p><p>接收端将校验比特与信息比特异或相加得到<strong>校正因子</strong></p><p>校正因子全为0，无差错，不全为0，可以纠错。</p><p><strong>海明码距</strong></p><p>任意两个码字对应二进制位不同的个数的最小值。</p><p>如000与011,码距为2，可以检测1个比特的错误</p><p>如000与111，码距为3，可以检测出2个比特的错误，可以纠正1个比特的差错。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115004843134.png" alt="image-20211115004843134"></p><p><strong>最小校验位r</strong>:</p><script type="math/tex; mode=display">2^r \ge K + r + 1</script><p><strong>海明码计算</strong></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115012202296.png" alt="image-20211115012202296"></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115012240118.png" alt="image-20211115012240118"></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115012256016.png" alt="image-20211115012256016"></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115012310785.png" alt="image-20211115012310785"></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115012326557.png" alt="image-20211115012326557"></p><h6 id="ARQ（自动重传请求）Automatic-Repeat-request"><a href="#ARQ（自动重传请求）Automatic-Repeat-request" class="headerlink" title="ARQ（自动重传请求）Automatic Repeat request"></a>ARQ（自动重传请求）Automatic Repeat request</h6><h4 id="PPP点对点协议"><a href="#PPP点对点协议" class="headerlink" title="PPP点对点协议"></a>PPP点对点协议</h4><p>point-to-point Protocol</p><h5 id="协议特点："><a href="#协议特点：" class="headerlink" title="协议特点："></a>协议特点：</h5><ol><li>封装成帧</li><li>透明传输</li><li>支持多种网络层协议</li><li>差错检测</li><li>允许身份验证</li><li>允许网络层地址协商</li></ol><h5 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h5><ol><li><p>将IP数据报封装到串行链路的方法</p></li><li><p>链路控制协议LCP（Link Control Protocol）</p><p>建立、配置和测试数据链路的协议</p></li><li><p>网络控制协议NCP（Network Control Protocol）</p><p>为IP分配临时IP地址</p></li></ol><h5 id="帧格式"><a href="#帧格式" class="headerlink" title="帧格式"></a>帧格式</h5><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115013203791.png" alt="image-20211115013203791"></p><blockquote><ol><li><p>F 为标志字段，A是地址字段，C是控制字段，FCS采用CRC。</p></li><li><p>协议字段，为0x0021对应IP数据报，0x8021对应NCP,0xC021对应LCP</p></li><li>PPP帧面向字节，帧长为整数字节</li></ol></blockquote><p><strong>透明传输</strong> </p><ol><li><p>字符填充</p><blockquote><p>7E -&gt; (7D 5E)</p><p>7D -&gt; (7D 5D)</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115015106086.png" alt="image-20211115015106086"></p></blockquote></li><li><p>比特填充</p><p>连续5个1加一个0</p></li></ol><h4 id="媒体共享技术"><a href="#媒体共享技术" class="headerlink" title="媒体共享技术"></a>媒体共享技术</h4><h5 id="静态划分信道"><a href="#静态划分信道" class="headerlink" title="静态划分信道"></a>静态划分信道</h5><ol><li>FDM</li><li>TDM</li><li>WDM</li><li>CDM</li></ol><h5 id="动态分配"><a href="#动态分配" class="headerlink" title="动态分配"></a><strong>动态分配</strong></h5><p>争用协议：</p><p><strong>ALOHA协议</strong></p><p>有数据就发，监听，发送失败各自等<strong>随机时间</strong>，重新发。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115093126837.png" alt="image-20211115093126837"></p><p>信道利用率低，自由发送，碰撞几率很大。</p><p><strong>CSMA/CD协议</strong></p><blockquote><p>以太网的服务是不可靠的交付，尽最大努力的交付。</p><p>出现错误就丢弃，差错的纠正来自高层。</p><p>以太网发送的数据采用<strong>曼彻斯特编码</strong></p></blockquote><p><strong>CSMA/CD:载波监听 多点接入 碰撞检测</strong></p><p><strong>Carrier Sense Multiple Access with Collision Detection</strong></p><p><strong>先听后发，边发边听</strong></p><p>一旦发生碰撞，就立即停止发送，等待随机一段时间再发送。</p><p><strong>碰撞检测的必要性：电磁波在总线上传播速率是有限的。</strong></p><p><strong>不能进行全双工通信只能半双工</strong></p><h5 id="争用期："><a href="#争用期：" class="headerlink" title="争用期："></a>争用期：</h5><blockquote><p>2τ（两倍的往返时延），争用期也称碰撞窗口</p></blockquote><h5 id="二进制指数类型退避算法："><a href="#二进制指数类型退避算法：" class="headerlink" title="二进制指数类型退避算法："></a>二进制指数类型退避算法：</h5><blockquote><p>truncated binary exponential type</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115094919508.png" alt="image-20211115094919508"></p><p>10Mbit/s的以太网争用期为51.2us,可以发送512bit(64B)</p><p>所以最短的有效帧长为64B,长度小于64B的帧都是由于异常终止的无效帧。</p></blockquote><h5 id="帧间最小间隔："><a href="#帧间最小间隔：" class="headerlink" title="帧间最小间隔："></a>帧间最小间隔：</h5><p>9.6us，相当于96bit的发送时间，检测到空闲后还要再等9.6us</p><p><strong>随机访问：</strong>发送时刻随意</p><p><strong>竞争发送：</strong>发送的站自由竞争信道的使用权</p><h4 id="信道利用率"><a href="#信道利用率" class="headerlink" title="信道利用率"></a>信道利用率</h4><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115100615261.png" alt="image-20211115100615261"></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115100758311.png" alt="image-20211115100758311"></p><h4 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h4><p>星型以太网10Base-T：</p><p>使用集线器（hub)、CSMA/CD协议，<strong>工作在物理层</strong>，<strong>不进行碰撞检测</strong></p><h5 id="以太网的层次结构"><a href="#以太网的层次结构" class="headerlink" title="以太网的层次结构"></a>以太网的层次结构</h5><p>IEEE802委员会提出局域网参考模型</p><ol><li><p>物理层</p></li><li><p>数据链路层</p><blockquote><p>媒体接入控制MAC： medium access control</p><p>逻辑链路控制LLC ：logical link control </p><p><strong>不管采用何种协议的局域网，对LLC子层都是透明的。</strong></p></blockquote><p>MAC地址6B（48位）</p><p>MAC帧格式：以太网V2的格式</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115102800092.png" alt="image-20211115102800092"></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115103144424.png" alt="image-20211115103144424"></p></li></ol><h4 id="局域网的互联"><a href="#局域网的互联" class="headerlink" title="局域网的互联"></a>局域网的互联</h4><p>互联设备：</p><ol><li><p>转发器</p><blockquote><p><strong>工作在物理层</strong></p></blockquote></li><li><p>集线器</p><blockquote><p>使用集线器的以太网逻辑上仍是一个总线网，各工作站使用CSMA/CD协议，共享逻辑总线。</p><p><strong>工作在物理层</strong></p><p>可以使用光纤扩展。</p></blockquote></li><li><p>网桥</p><blockquote><p><strong>工作在数据链路层</strong></p><p>根据MAC 帧的目的地址对收到的帧<strong>转发和过滤。</strong></p><p>转发前执行CSMA/CD算法。</p></blockquote></li><li><p>交换机</p></li></ol><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211115110720860.png" alt="image-20211115110720860"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理层复习</title>
      <link href="/2021/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%89%A9%E7%90%86%E5%B1%82%E5%A4%8D%E4%B9%A0/"/>
      <url>/2021/11/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%89%A9%E7%90%86%E5%B1%82%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><h4 id="物理层的基本概念："><a href="#物理层的基本概念：" class="headerlink" title="物理层的基本概念："></a>物理层的基本概念：</h4><h5 id="奈氏准则："><a href="#奈氏准则：" class="headerlink" title="奈氏准则："></a>奈氏准则：</h5><p><strong>理想低通信道</strong>：</p><script type="math/tex; mode=display">码元最高传输速率 = 2 \times W 码元/秒</script><blockquote><p>W为信道带宽，单位是Hz,码元传输速率单位为码元/秒（波特率）</p></blockquote><p><strong>理想带通信道</strong>：</p><script type="math/tex; mode=display">最高码元传输速率 = W 码元/秒</script><blockquote><p>码元状态数为N,每个码元携带n个bit.</p><script type="math/tex; mode=display">n = log_2N</script></blockquote><p><strong>信噪比</strong>：</p><p>信号的平均功率与噪声平均功率之比，常记为S/N，并用分贝dB作为度量单位。</p><script type="math/tex; mode=display">信噪比(dB) = 10log_{10}{\frac{S}{N}}</script><p><strong>香农公式</strong>：</p><p>带宽受限且含有高斯白噪声干扰的信道的极限、无差错的信息传输速率。</p><script type="math/tex; mode=display">信道极限传输速率C = Wlog_2(1+\frac{S}{N})\quad(bit/s)\\W 为信道带宽\\S为信道内信号平均功率\\N为信道内部的高斯噪声功率</script><blockquote><ol><li>信道的带宽或信道中的信噪比越大，信息的极限传输速率就越高。</li><li><strong>只要信息传输速率低于极限传输速率就一定能通过某种方法实现无差错的传输</strong>。</li><li>若带宽或信噪比没有上限，则信道极限传送速率也没有上限。</li><li>如果带宽或信噪比达到上限，可以<strong>通过编码让一个码元携带更多的信息量</strong>。</li></ol></blockquote><h4 id="物理层下的传输媒体"><a href="#物理层下的传输媒体" class="headerlink" title="物理层下的传输媒体"></a>物理层下的传输媒体</h4><h5 id="导引型传输媒体"><a href="#导引型传输媒体" class="headerlink" title="导引型传输媒体"></a>导引型传输媒体</h5><ol><li><p><strong>双绞线</strong></p><p>常用、电话系统、带宽依赖于线的<strong>粗细</strong>和<strong>传输距离</strong></p><p><strong>屏蔽型双绞线STP</strong>（Shielded Twisted Pair）：带金属屏蔽层</p><p><strong>无屏蔽双绞线UTP</strong>（Unshielded Twisted Pair）</p><p>最常用的UTP是5类线（category 5）</p></li><li><p><strong>同轴电缆</strong></p><p>具有很好的抗干扰特性，广泛用于传输<strong>较高速率</strong>的数据，带宽取决于<strong>电缆的质量</strong>。</p><ol><li><p><strong>基带同轴电缆</strong></p><p>50Ω用于数字传输</p></li><li><p><strong>宽带同轴电缆</strong></p><p>75Ω用于模拟传输</p></li></ol></li><li><p><strong>光缆</strong></p><p>光纤通信系统传输带宽远远大于目前其他传输媒体的带宽。</p><p><strong>多模光纤</strong>：</p><p>存在多条不同角度入射的光线在一条光纤中传输。</p><p>适合短距离传输，因为在传输过程中，光脉冲展宽，造成失真。</p><p><strong>单模光纤</strong>：</p><p>激光源为昂贵的半导体，脉冲损耗小，适合长距离传输。</p><p>光纤优点：</p><p>通信容量大、传输损耗小、抗电磁干扰好、体积小、重量轻。</p></li></ol><h5 id="非导引型传输媒体"><a href="#非导引型传输媒体" class="headerlink" title="非导引型传输媒体"></a>非导引型传输媒体</h5><p>介质为自由空间。</p><p><strong>短波通信</strong>（高频通信）通信质量差，传输速率低。</p><p><strong>微波通信</strong> 需要微波中转站，通信方式为微波接力通信、卫星通信</p><h4 id="信道复用技术"><a href="#信道复用技术" class="headerlink" title="信道复用技术"></a>信道复用技术</h4><ol><li><p><strong>频分复用</strong></p><p>FDM（frequency division multiplexing）</p><p>所有用户在同一时间占用不同的频率带宽</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114200307083.png" alt="image-20211114200307083"></p></li><li><p><strong>时分复用</strong></p><p>TDM（Time division multiplexing）</p><p>时分复用帧（TDM帧），<strong>长度为周期</strong></p><p>每个用户在每个<strong>等长的TDM帧</strong>中占用固定序号的间隙。</p><p>TDM信号也称为<strong>等时信号</strong>，时分复用所有用户在不同时间占用同样的频带宽度。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114203258163.png" alt="image-20211114203258163"></p><p>时分复用中当某用户无数据发送时，就会处于空闲状态，造成线路资源浪费。</p><p>改进：<strong>统计时分复用STDM</strong> (Statistic TDM)</p><p>不是固定分配每个用户时隙，而是<strong>按需动态的分配</strong>，可以提高线路的利用率。</p><p>工作原理如下图：</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114203758815.png" alt="image-20211114203758815"> </p></li></ol><ol><li><p><strong>波分复用</strong></p><p><strong>WDM</strong> Wavelength division multiplexing</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114211146543.png" alt="image-20211114211146543"></p></li></ol><ol><li><p><strong>码分复用</strong></p><p><strong>CDMA码分多址(code division multiplexing access)</strong></p><p>每一个比特时间划分为m个间隔，成为码片(chip)</p><p>每个站被指派唯一的m bit的码片序列，发送1时，对应该码片序列，发送0时，对应该码片序列的反码。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114211944263.png" alt="image-20211114211944263"></p><p>如果s站数据率为b bit/s 每个比特转换成m个码片，实际发送的数据率提高到mb bit/s ，S站的频带宽度提高m倍，称为<strong>扩频通信</strong>(spread spectrum)</p><blockquote><p>每个站分配的码片序列<strong>不仅各不相同还要互相正交</strong>。</p><p>例如站S和T，满足正交的关系，就是向量S和T的规格化内积（inner product）等于0</p><script type="math/tex; mode=display">S \cdot T \equiv \frac{1}{m} \sum_{i=1}^m S_iT_i = 0</script><p>任何一个码片和自己规格化内积等于1</p><script type="math/tex; mode=display">S \cdot S = \frac{1}{m} \sum_{i=1}^m S_iS_i = \frac{1}{m} \sum_{i=1}^m S_i^2 = \frac{1}{m} \sum_{i=1}^m (\pm 1)^2 = 1</script><p>同理任何一个码片和自己反码的规格化内积为-1</p></blockquote></li></ol><h4 id="CDMA工作原理"><a href="#CDMA工作原理" class="headerlink" title="CDMA工作原理"></a>CDMA工作原理</h4><p>每个站发送的扩频信号在接收方形成<strong>叠加</strong>信号。</p><p>当接收方打算接收S的信号，就用叠加信号和S站码片序列内积，<strong>结果为1，代表有数据1发送，结果为-1代表有数据0发送，结果为0代表没有信号发送。</strong></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114220146192.png" alt="image-20211114220146192"></p><h4 id="数字传输系统"><a href="#数字传输系统" class="headerlink" title="数字传输系统"></a>数字传输系统</h4><p>T1：北美的24路PCM</p><p>E1：欧洲的30路PCM（我国采用的是E1标准）</p><p><strong>同步光纤网SONET</strong></p><p>Synchronous Optical Network</p><p>SONET为光纤传输系统定义了同步传输的线路速率。</p><p><strong>同步数字系列SDH</strong></p><p>Synchronous Digital Hierarchy</p><p>SDH称为第一级同步传递模块（Synchronous Transfer Module）即STM-1，相当于SONET体系中的OC-3速率。</p><p>一个STS-n帧的长度是STS-1帧长的n倍。</p><h4 id="物理层的主要任务"><a href="#物理层的主要任务" class="headerlink" title="物理层的主要任务"></a>物理层的主要任务</h4><p>确定与传输媒体的接口的一些特性。</p><ol><li><p>机械特性：</p><p>尺寸、形状、引线数目和排列</p></li><li><p>电气特性：</p><p>接口电缆各条线上的电压的范围</p></li><li><p>功能特性：</p><p>指明某条线上电压表示的意义。</p></li><li><p>过程特性：</p><p>事件出现的顺序。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络概述</title>
      <link href="/2021/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A01/"/>
      <url>/2021/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A01/</url>
      
        <content type="html"><![CDATA[<h4 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h4><h4 id="计算机网络的定义"><a href="#计算机网络的定义" class="headerlink" title="计算机网络的定义"></a>计算机网络的定义</h4><p>计算机网络就是一些互联的、自治的计算机系统的集合。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113185456664.png" alt="image-20211113185456664"></p><h4 id="互联网的特点"><a href="#互联网的特点" class="headerlink" title="互联网的特点"></a>互联网的特点</h4><ol><li><p>连通性 connectivity </p><p>上网的用户可以交换信息。</p></li><li><p>共享 sharing</p><p>资源共享</p></li></ol><h4 id="互连网与互联网"><a href="#互连网与互联网" class="headerlink" title="互连网与互联网"></a>互连网与互联网</h4><ol><li><p>互连网(internet)：</p><p>多个计算机网络通过路由器互连而成的网络。</p><p>“网络的网络”(network of networks)</p></li><li><p>互联网(Internet)：</p><p>由众多网络相互连接而成的特定计算机网络。由美国阿帕网(ARPANET)发展而成，主要采用TCP/IP协议作为通信的规则。</p></li></ol><blockquote><p>任意将几个网络互连起来，并能够相互通信，构成的是互连网，而不是互联网。</p></blockquote><h4 id="网络的网络"><a href="#网络的网络" class="headerlink" title="网络的网络"></a>网络的网络</h4><ol><li><p>简单的网络</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113190815546.png" alt="image-20211113190815546"></p></li><li><p>由网络构成的互连网</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113190841984.png" alt="image-20211113190841984"></p></li></ol><blockquote><ol><li><p><strong>网络</strong>把许多计算机（主机）连接在一起。</p></li><li><p><strong>互连网</strong>将许多网络通过路由器连接在一起。</p></li></ol></blockquote><h4 id="互联网发展的三个阶段"><a href="#互联网发展的三个阶段" class="headerlink" title="互联网发展的三个阶段"></a>互联网发展的三个阶段</h4><ol><li><p>单个网络ARPANET(Advanced Research Project Agency Network)向互联网发展。</p><p>1983年，TCP/IP协议成为ARPANET上的标准协议，使得所有使用TCP/IP协议的计算机都能通过互连网相通信。</p></li><li><p>三级结构的互联网：</p><p>分为主干网、地区网、校园网。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113191643053.png" alt="image-20211113191643053"></p></li><li><p>多层次ISP结构的互联网</p><p>ISP：互联网服务提供者(Internet Service Provider)</p><p>机构和个人缴纳费用就可以从ISP获取IP地址的使用权，通过此ISP接入到互联网中。</p><p>ISP根据覆盖面积和IP地址数量分为：主干ISP、地区ISP、本地ISP</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113192037618.png" alt="image-20211113192037618"></p></li></ol><h5 id="互联网的标准化"><a href="#互联网的标准化" class="headerlink" title="互联网的标准化"></a>互联网的标准化</h5><p>互联网的标准化工作对于互联网发展起到了非常重要的作用。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113192344256.png" alt="image-20211113192344256"></p><p>ISOC：互联网协会 Internet Society</p><h4 id="互联网的组成"><a href="#互联网的组成" class="headerlink" title="互联网的组成"></a>互联网的组成</h4><ol><li><p>边缘部分：连接到互联网上的主机</p></li><li><p>核心部分：由大量网络和连接这些网络的路由器组成。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113192718137.png" alt="image-20211113192718137"></p></li></ol><blockquote><p>处在互联网边缘的部分就是连接在互联网上的所有主机，也称为端系统(end system).</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113194356305.png" alt="image-20211113194356305"></p></blockquote><h5 id="端系统的两种通信方式"><a href="#端系统的两种通信方式" class="headerlink" title="端系统的两种通信方式"></a>端系统的两种通信方式</h5><p>客户服务器方式(C/S方式)</p><p>   发送电子邮件、信息检索</p><p>   客户是服务的<strong>请求方</strong>，服务器是服务的<strong>提供方</strong>。</p><p>   客户端主动发起通信，必须知道服务器程序的地址。</p><p>   服务器端程序不需要知道客户程序的地址。</p><p>   <strong>连接之后通信是双向的</strong></p><p>   <img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113195047679.png" alt="image-20211113195047679"></p><p>对等连接方式(P2P方式)</p><p>   peer-to-peer</p><p>   对等连接中每一个主机既是客户端又是服务端。可支持大量对等用户（如上百万个用户）同时工作。</p><p>   <img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113195824124.png" alt="image-20211113195824124"></p><h4 id="互联网上的核心部分"><a href="#互联网上的核心部分" class="headerlink" title="互联网上的核心部分"></a>互联网上的核心部分</h4><p>   在网络核心部分起到特殊作用的是路由器(router)</p><p>   路由器是实现<strong>分组交换</strong>(packet switching)的关键构件，任务是转发收到的分组，这是网络核心部分最重要的功能。</p><h4 id="三种交换方式"><a href="#三种交换方式" class="headerlink" title="三种交换方式"></a>三种交换方式</h4><p>   <img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113201120973.png" alt="image-20211113201120973"></p><h5 id="电路交换："><a href="#电路交换：" class="headerlink" title="电路交换："></a>电路交换：</h5><p>   <img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113201544190.png" alt="image-20211113201544190"></p><p>   交换特点：</p><ol><li><p>电路交换必定是<strong>面向连接</strong>的。</p></li><li><p>电路交换分为三个阶段：</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113201856347.png" alt="image-20211113201856347"></p><p>电路交换缺点：</p><p>通信利用率低，计算机数据具有突发性。</p><h5 id="报文交换（message-switching）："><a href="#报文交换（message-switching）：" class="headerlink" title="报文交换（message switching）："></a>报文交换（message switching）：</h5><p>数据交换的单位是报文，在交换节点时采用的是存储转发的方式。</p><h5 id="分组交换（packet-Switching）："><a href="#分组交换（packet-Switching）：" class="headerlink" title="分组交换（packet Switching）："></a>分组交换（packet Switching）：</h5><p>特点：</p><ol><li><p>采用<strong>存储转发</strong>的技术。</p></li><li><p>发送时，将较长的报文划分为较短的、固定长度的数据段，在每个数据段前添加<strong>首部</strong>构成<strong>分组</strong>。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113202902202.png" alt="image-20211113202902202"></p></li><li><p>分组交换的数据传输单元为”分组”也称”包”，首部也称为“包头”。依次以分组为单位将各分组发送到接收端。</p><p>每个分组的首部都包含地址（目的地址、源地址），节点交换机根据地址信息把分组转发到目的主机或下个交换机。</p></li><li><p>每个分组在互联网中独立地选择传输路径。用这样的存储转发的方式，最终分组就能到达目的主机。</p></li></ol><p>优点：</p><ol><li>高效：在传输过程中动态分配带宽</li><li>灵活：为每个分组独立地选择最合适的转发路由</li><li>迅速：无需建立连接，就能向其他主机发送分组</li><li>可靠：网络协议可靠。</li></ol><p>问题：</p><ol><li>各分组排队时延。</li><li>添加首部增加开销。</li></ol><h4 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h4></li></ol><ol><li>路由器的输入和输出端口没有直接连线</li><li>将收到的分组暂时放入缓存，查找转发表，找到目的地址应从哪个端口转发，把分组从适合的端口转发出去。</li><li>各路由器必须经常交换路由信息，动态维护转发表。</li></ol><h4 id="计算机网络的分类"><a href="#计算机网络的分类" class="headerlink" title="计算机网络的分类"></a>计算机网络的分类</h4><h5 id="网络作用范围"><a href="#网络作用范围" class="headerlink" title="网络作用范围"></a>网络作用范围</h5><ol><li><p>广域网WAN（Wide Area Network）：通常跨越国家</p></li><li><p>城域网MAN（Metropolitan Area Network）</p></li><li><p>局域网LAN（Local Area Network）：校园网或企业网</p></li><li><p>个人局域网PAN（Personal Area Network）</p><blockquote><p>若中央处理机之间的距离非常近，一般称为多处理机系统，而非计算机网络。</p></blockquote></li></ol><h5 id="网络的使用者"><a href="#网络的使用者" class="headerlink" title="网络的使用者"></a>网络的使用者</h5><ol><li>公用网（public network）</li><li>专用网（private network）</li></ol><h5 id="用来把用户接入互联网的网络"><a href="#用来把用户接入互联网的网络" class="headerlink" title="用来把用户接入互联网的网络"></a>用来把用户接入互联网的网络</h5><p>接入网AN（Access Network）：让用户能够与互联网连接</p><p><strong>接入网是从某个用户端系统到互联网中第一个路由器（边缘路由器）之间的一种网络。</strong></p><h4 id="计算机网络的性能"><a href="#计算机网络的性能" class="headerlink" title="计算机网络的性能"></a>计算机网络的性能</h4><ol><li><p>速率：</p><p>数据的传送速率，也称为<strong>数据率</strong>或<strong>比特率</strong></p><p>单位是bit/s或bps</p><p><strong>往往指的是额定速率或标称速率，非实际运行速率。</strong></p></li><li><p>带宽（bandwidth）：</p><p>表示网络中某通道的传送数据的能力。</p><p>表示在单位时间内网络中某信道所能通过的“最高数据率”</p><p>单位bit/s</p></li><li><p>吞吐量(throughput):</p><p>表示单位时间内通过某个网络的数据量。</p><p>实际速率。单位bit/s</p><p>吞吐量受到网络带宽或网络的额定速率的限制。</p></li><li><p>时延(delay):</p><p>数据从网络一端传送到另一端的时间。</p><blockquote><ol><li><p>发送时延（transmission delay）</p><p>也称<strong>传输时延</strong></p><p>从发送数据帧的第一个比特算起到该帧的最后一个比特发送完毕所需的时间。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114112845585.png" alt="image-20211114112845585"></p></li><li><p>传播时延（propagation delay）</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114113653538.png" alt="image-20211114113653538"></p></li><li><p>处理时延</p><p>处理分组所花费的时间。</p></li><li><p>排队时延</p><p>分组在路由器<strong>输入、输出队列中排队等待处理</strong>所需的时间。取决于通信量，当队列溢出时，相当于时延无限大。</p></li></ol></blockquote><p>总时延 = 发送时延+传播时延+处理时延+排队时延</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114113414892.png" alt="image-20211114113414892"></p></li></ol><ol><li><p>时延带宽积：</p><p>链路的时延带宽积又称以比特为单位的链路长度。</p><p>时延带宽积 = 传播时延 * 带宽</p></li><li><p>往返时间RTT（Round-Trip Time）</p><p>发送方发送数据到发送方接收确认经历的时间。</p><p>有效数据率 = 数据长度/（发送时延+RTT）</p></li><li><p>利用率</p><p>信道利用率和网络利用率</p><blockquote><p>1.信道利用率为信道有百分之几的时间用来数据通过的。</p><p>2.网络利用率是全网络信道利用率的加权平均。</p><p>信道利用率并非越高越好，当利用率增大时，信道引起的时延迅速增加。</p><script type="math/tex; mode=display">D = \frac{D_0}{1-U}</script><!--$$D_0为空闲时延，D为当前时延，U为网络利用率$$--></blockquote></li></ol><h4 id="计算机网络的体系结构"><a href="#计算机网络的体系结构" class="headerlink" title="计算机网络的体系结构"></a>计算机网络的体系结构</h4><p>系统网络体系结构SNA（system network architecture）</p><p>开放系统互连基本参考模型OSI/RM(open systems interconnection reference Model)简称OSI </p><h5 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h5><p>network protocol，简称协议，为了网络中数据交换而建立的规则、标准、约定。</p><p>三个组成要素：</p><p>1.语法：</p><p>数据与控制信息的结构或格式</p><p>2.语义：</p><p>需要发出何种控制信息，完成何种动作，做出何种响应。</p><p>3.同步：</p><p>事件的实现顺序</p><p>网络协议是计算机网络不可缺少的组成部分。</p><p>计算机网络结构应该是层次式的。</p><p>各层完成的主要功能：</p><ol><li><p>流量控制</p></li><li><p>差错控制</p></li><li>分段和重装</li><li>连接建立和释放</li><li>复用和分用</li></ol><h5 id="TCP-IP的四层结构："><a href="#TCP-IP的四层结构：" class="headerlink" title="TCP/IP的四层结构："></a>TCP/IP的四层结构：</h5><ol><li>应用层</li><li>运输层</li><li>网际层</li><li>网络接口层</li></ol><h5 id="OSI的七层结构"><a href="#OSI的七层结构" class="headerlink" title="OSI的七层结构"></a>OSI的七层结构</h5><ol><li>应用层</li><li>表示层</li><li>会话层</li><li>运输层</li><li>网络层</li><li>数据链路层</li><li>物理层</li></ol><h5 id="五层协议的体系结构"><a href="#五层协议的体系结构" class="headerlink" title="五层协议的体系结构"></a>五层协议的体系结构</h5><ol><li><p>应用层 application layer</p><p>通过进程间的交互完成特定的应用，域名系统DNS，万维网HTTP，电子邮件SMTP</p></li><li><p>运输层 transport layer</p><p>向两台主机中的进程通信提供通用数据传输服务</p><p>传输控制协议 transmission control protocol TCP</p><p>用户数据包协议 user datagram protocol </p></li><li><p>网络层 network layer</p><p>为分组交换网上的不同主机提供通信服务，选择合适路由</p><p>网际协议IP Internet protocol</p><p>路由选择协议</p></li><li><p>数据链路层 data link layer</p><p>两个相邻节点之间传送数据</p></li><li><p>物理层 physical layer</p><p>传输数据单位为比特</p></li></ol><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211114150523914.png" alt="image-20211114150523914"></p><blockquote><p>协议数据单元 PDU protocol data unit</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testPicture</title>
      <link href="/2021/11/13/testPicture/"/>
      <url>/2021/11/13/testPicture/</url>
      
        <content type="html"><![CDATA[<p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113185004170.png" alt="image-20211113185004170"></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双目测距</title>
      <link href="/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D/"/>
      <url>/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D/</url>
      
        <content type="html"><![CDATA[<h3 id="双目摄像头测距"><a href="#双目摄像头测距" class="headerlink" title="双目摄像头测距"></a>双目摄像头测距</h3><h4 id="1-双目摄像头配置使用"><a href="#1-双目摄像头配置使用" class="headerlink" title="1.双目摄像头配置使用"></a>1.双目摄像头配置使用</h4><h4 id="2-测距原理"><a href="#2-测距原理" class="headerlink" title="2.测距原理"></a>2.测距原理</h4><h4 id="3-图片处理函数"><a href="#3-图片处理函数" class="headerlink" title="3.图片处理函数"></a>3.图片处理函数</h4>]]></content>
      
      
      <categories>
          
          <category> 智能小车 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方向控制</title>
      <link href="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="方向控制"><a href="#方向控制" class="headerlink" title="方向控制"></a>方向控制</h3><h4 id="1-含有车道线的图片（三张）"><a href="#1-含有车道线的图片（三张）" class="headerlink" title="1.含有车道线的图片（三张）"></a>1.含有车道线的图片（三张）</h4><blockquote><p>①居中</p><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/Users\402\Downloads\car.png" alt="car" style="zoom:25%;"><p>②偏左</p><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/Users\402\Downloads\car1.png" alt="car1" style="zoom:25%;"><p>③偏右</p><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/Users\402\Downloads\car2.png" alt="car2" style="zoom:25%;"></blockquote><h4 id="2-图像处理"><a href="#2-图像处理" class="headerlink" title="2.图像处理"></a>2.图像处理</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>image<span class="token punctuation">)</span>    <span class="token comment"># hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)  # 色彩空间转换为hsv，分离.</span>    <span class="token comment">#色相（H）是色彩的基本属性，就是平常所说的颜色名称，如红色、黄色等。</span>    <span class="token comment">#饱和度（S）是指色彩的纯度，越高色彩越纯，低则逐渐变灰，取0-100%的数值。</span>    <span class="token comment">#明度（V），取0-100%。</span>    <span class="token comment">#OpenCV中H,S,V范围是0-180,0-255,0-255</span>    <span class="token comment"># cv2.imshow("img",img)</span>    <span class="token comment"># cv2.waitKey(0)</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的高</span>        <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的宽</span>            px <span class="token operator">=</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span>            <span class="token comment"># print(px)    # 这样就能得到每个点的bgr值</span>            <span class="token keyword">if</span> px<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">255</span> <span class="token keyword">and</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">255</span><span class="token punctuation">:</span>                L1 <span class="token operator">=</span> y<span class="token comment">#白色的左边界</span>                <span class="token keyword">break</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的高</span>        <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的宽</span>            px <span class="token operator">=</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span>            <span class="token comment"># print(px)    # 这样就能得到每个点的bgr值</span>            <span class="token keyword">if</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">255</span> <span class="token keyword">and</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">255</span><span class="token punctuation">:</span>                L2 <span class="token operator">=</span> y<span class="token comment">#白色的右边界</span>                <span class="token keyword">break</span>    LH <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">2</span>    <span class="token comment"># print("L1: ",str(L1))</span>    <span class="token comment"># print("L2: ",str(L2))</span>    LV <span class="token operator">=</span> <span class="token punctuation">(</span>L1<span class="token operator">+</span>L2<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span> <span class="token comment">#白色的中间值</span>    <span class="token keyword">if</span> L2 <span class="token operator">&lt;=</span> LH<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"left"</span>    <span class="token keyword">elif</span> L1 <span class="token operator">>=</span> LH<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"right"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"center"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h4><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/ZB\计院2022\算法\OpencvCode\车道测试图片\结果1.png" alt="结果1" style="zoom:100%;"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""调节图片大小"""</span><span class="token keyword">import</span> cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'test01.png'</span><span class="token punctuation">)</span>scale_percent <span class="token operator">=</span> <span class="token number">60</span>width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> scale_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> scale_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>dim <span class="token operator">=</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>resized <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span>dim<span class="token punctuation">,</span>interpolation <span class="token operator">=</span> cv2<span class="token punctuation">.</span>INTER_AREA<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Resized image'</span><span class="token punctuation">,</span>resized<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitkey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 智能小车 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小车设计流程</title>
      <link href="/2021/10/24/%E5%B0%8F%E8%BD%A6%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/10/24/%E5%B0%8F%E8%BD%A6%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>小车启动-&gt;开始拍摄-&gt;<del>保存视频</del>-&gt;处理图片-&gt;返回方向信息</p><p>1.拍摄视频（每隔1ms处理一次）</p><blockquote><p>代码参考文档\OpencvCode\拍摄视频.md</p></blockquote><p>2.图片处理</p><blockquote><p>方案一参考文档\OpencvCode\方向控制.md</p><p>方案二<del>（双目测距）</del></p></blockquote><p>3.返回信息</p><p>每隔10张图片</p>]]></content>
      
      
      <categories>
          
          <category> 智能小车 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测距原理</title>
      <link href="/2021/10/24/%E6%B5%8B%E8%B7%9D%E5%8E%9F%E7%90%86/"/>
      <url>/2021/10/24/%E6%B5%8B%E8%B7%9D%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><strong>输入输出接口</strong></p><p>Input：</p><p>（1）左右两个摄像头采集的实时图像视频分辨率（整型int）</p><p>（2）左右两个摄像头采集的实时图像视频格式 （RGB，YUV，MP4等）</p><p>（3）摄像头标定参数（中心位置（x,y）和5个畸变</p><p>系数（2径向，2切向，1棱向），浮点型float）</p><p>（4）摄像头初始化参数（摄像头初始位置和三个坐标方向</p><p>的旋转角度，车辆宽度高度车速等等，浮点型float）</p><p>Output：</p><p>（1）左右两帧图像匹配的图像视频分辨率（整型int）</p><p>（2）左右两帧图像匹配的图像视频格式（RGB，YUV，MP4等）</p><p>（3）左右两帧图像image/video 匹配后的深度信息（浮点型float）</p><p>（4）目标物与摄像头的距离 （浮点型float）</p><p><strong>1.</strong> <strong>功能定义</strong></p><p><strong>双目测距实际操作分4个步骤</strong>：相机标定——双目校正——双目匹配——计算深度信息。</p><p><strong>相机标定：</strong>摄像头由于光学透镜的特性使得成像存在着径向畸变，可由三个参数k1,k2,k3确定；由于装配方面的误差，传感器与光学镜头之间并非完全平行，因此成像存在切向畸变，可由两个参数p1,p2确定。单个摄像头的定标主要是计算出摄像头的内参（焦距f和成像原点cx,cy、五个畸变参数（一般只需要计算出k1,k2,p1,p2，对于鱼眼镜头等径向畸变特别大的才需要计算k3））以及外参（标定物的世界坐标）。而双目摄像头定标不仅要得出每个摄像头的内部参数，还需要通过标定来测量两个摄像头之间的相对位置（即右摄像头相对于左摄像头的旋转矩阵R、平移向量t）。</p><p><strong>双目校正：</strong>双目校正是根据摄像头定标后获得的单目内参数据（焦距、成像原点、畸变系数）和双目相对位置关系（旋转矩阵和平移向量），分别对左右视图进行消除畸变和行对准，<strong>使得左右视图的成像原点坐标一致</strong>（CV_CALIB_ZERO_DISPARITY标志位设置时发生作用）、两摄像头光轴平行、左右成像平面共面、对极线行对齐。这样一幅图像上任意一点与其在另一幅图像上的对应点就必然具有相同的行号，只需在该行进行一维搜索即可匹配到对应点。<br><strong>双目匹配：</strong>双目匹配的作用是把同一场景在左右视图上对应的像点匹配起来，这样做的目的是为了得到视差图。双目匹配被普遍认为是立体视觉中最困难也是最关键的问题。得到视差数据，通过上述原理中的公式就可以很容易的计算出深度信息。</p><p><strong>2. 技术路线方案</strong></p><p>双目视觉广泛应用在机器人导航，精密工业测量、物体识别、虚拟现实、场景重建，勘测领域。</p><p>双目视觉是模拟人类视觉原理，使用计算机被动感知距离的方法。从两个或者多个点观察一个物体，获取在不同视角下的图像，根据图像之间像素的匹配关系，通过三角测量原理计算出像素之间的偏移来获取物体的三维信息。</p><p>它的物理原理是这样的，首先请看下图：</p><p><img src="https://pic1.zhimg.com/80/v2-e2fe1b96e23369a907195c14c569c240_720w.jpg" alt="img"></p><p>图1. 双目测距</p><p>如图1，P是待测物体上的某一点，OR与OT分别是两个相机的光心，点P在两个相机感光器上的成像点分别为P和P’（相机的成像平面经过旋转后放在了镜头前方），f为相机焦距，B为两相机中心距，Z为我们想求得的深度信息，设点P到点P’的距离为dis，则：</p><p><img src="https://pic3.zhimg.com/80/v2-23324632d2fa54460fac736baaae4d6a_720w.png" alt="img"></p><p>根据相似三角形原理：</p><p><img src="https://pic1.zhimg.com/80/v2-d1ed24def593a6255d058684fc0c4f18_720w.png" alt="img"></p><p>可得：</p><p><img src="https://pic4.zhimg.com/80/v2-baaf2aaa540bc2f96a07f1613d126a37_720w.png" alt="img"></p><p>公式中，焦距f和摄像头中心距B可通过标定得到，因此，只要获得了</p><p><img src="https://pic2.zhimg.com/80/v2-02e841c83582924c250f6e49796dd11d_720w.png" alt="img"></p><p>（即视差d）的值即可求得深度信息，即：</p><p><img src="https://pic3.zhimg.com/80/v2-3247e2031125661b811b5c1573278892_720w.png" alt="img"></p><p>假设目标点在左视图中的坐标为（x，y），在左右视图上形成的视差为d，目标点在以左摄像头光心为原点的世界坐标系中的坐标为（X，Y，Z），则存在所示的变换矩阵Q，使得</p><p><img src="https://pic2.zhimg.com/80/v2-b7ebb85e9a349f8cdd3f31b42fcd3cad_720w.png" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-0f191951ded8be1088d85f305653d247_720w.png" alt="img"></p><p>为了精确地求得某个点在三维空间里的距离Z，我们需要获得的参数有焦距f、视差d、摄像头中心距B。如果还需要获得X坐标和Y坐标的话，那么还需要额外知道左右像平面的坐标系与立体坐标系中原点的偏移cx和cy。其中f，d，cx和cy可以通过立体标定获得初始值，并通过立体校准优化，使得两个摄像头在数学上完全平行放置，并且左右摄像头的cx，cy和f相同。而立体匹配所做的工作，就是在之前的基础上，求取最后一个变量：视差d。从而最终完成求一个点三维坐标所需要的准备工作。在清楚了上述原理之后，我们也就知道了，所有的这几步：标定、校准和匹配，都是围绕着如何更精确地获得 f，d，B，cx 和cy 而设计的。</p><p>标定：摄像头标定一般都需要一个放在摄像头前的特制的标定参照物（棋盘纸），摄像头获取该物体的图像，并由此计算摄像头的内外参数。标定参照物上的每一个特征点相对于世界坐标系的位置在制作时应精确测定，世界坐标系可选为参照物的物体坐标系。在得到这些已知点在图像上的投影位置后，可计算出摄像头的内外参数。</p><p>校准与匹配：双目摄像头标定不仅要得出每个摄像头的内部参数，还需要通过标定来测量两个摄像头之间的相对位置。要计算目标点在左右两个视图上形成的视差，首先要把该点在左右视图上两个对应的像点匹配起来。然而，在二维空间上匹配对应点是非常耗时的，为了减少匹配搜索范围，我们可以利用极线约束使得对应点的匹配由二维搜索降为一维搜索。而双目校正的作用就是要把消除畸变后的两幅图像严格地行对应，使得两幅图像的对极线恰好在同一水平线上，这样一幅图像上任意一点与其在另一幅图像上的对应点就必然具有相同的行号，只需在该行进行一维搜索即可匹配到对应点。</p><p><img src="https://pic4.zhimg.com/80/v2-5351227dcb093590be7133743822a8eb_720w.jpg" alt="img"></p><p>图2. 双目校正与匹配</p><p><strong>3. 关键技术参数和性能指标</strong></p><p>利用双目摄像头的数据估计车辆和车辆距离。假设摄像头分辨率1280´720像素，焦距1458像素，角度误差小于0.5度。下表描述精度指标：</p><p><img src="https://pic2.zhimg.com/80/v2-6ecadb42e069aa2a077f101db2ddac19_720w.jpg" alt="img"></p><p>表1. 指标</p>]]></content>
      
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双目摄像头拍摄视频</title>
      <link href="/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%91%84%E5%83%8F%E5%A4%B4%E8%A7%86%E9%A2%91%E6%8B%8D%E6%91%84/"/>
      <url>/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%91%84%E5%83%8F%E5%A4%B4%E8%A7%86%E9%A2%91%E6%8B%8D%E6%91%84/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">GetvideoAndProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""调用摄像头读取视频，并逐帧保存图片"""</span>capture <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CAP_DSHOW<span class="token punctuation">)</span><span class="token comment">#捕获序号为0的摄像头</span>capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">1280</span><span class="token punctuation">)</span>capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">)</span>timecount <span class="token operator">=</span> <span class="token number">2</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>ret<span class="token punctuation">,</span>frame <span class="token operator">=</span> capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">#逐帧读取</span>frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>frame<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>picture_name <span class="token operator">=</span> <span class="token string">"test"</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>timecount<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"video"</span><span class="token punctuation">,</span>frame<span class="token punctuation">)</span>       <span class="token comment">#显示</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>picture_name<span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>picture_name<span class="token operator">+</span><span class="token string">"保存成功"</span><span class="token punctuation">)</span>timecount <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>timecount<span class="token punctuation">)</span><span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token comment">#在2s的时间内等待用户按键触发关闭</span>capture<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python简易配置及笔记</title>
      <link href="/2021/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="Python简易配置"><a href="#Python简易配置" class="headerlink" title="Python简易配置"></a>Python简易配置</h3><blockquote><p>官网链接：<a href="https://www.anaconda.com/products/individual#Downloads">https://www.anaconda.com/products/individual#Downloads</a></p><p><img src="/2021/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/4.png"></p><p>各种版本供你选择QAQ</p></blockquote><h3 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h3><blockquote><p><a href="https://github.com/jackfrued/Python-100-Days">https://github.com/jackfrued/Python-100-Days</a></p></blockquote><blockquote><p>摘自<a href="https://github.com/jackfrued%E7%9A%84%E5%88%86%E4%BA%AB">https://github.com/jackfrued的分享</a></p><p>作为一名Python开发者，根据个人的喜好和职业规划，可以选择的就业领域也非常多。</p><ul><li>Python后端开发工程师（服务器、云平台、数据接口）</li><li>Python运维工程师（自动化运维、SRE、DevOps）</li><li>Python数据分析师（数据分析、商业智能、数字化运营）</li><li>Python数据挖掘工程师（机器学习、深度学习、算法专家）</li><li>Python爬虫工程师</li><li>Python测试工程师（自动化测试、测试开发）</li></ul><blockquote><p><strong>说明</strong>：目前，<strong>数据分析是一个非常热门的方向</strong>，因为不管是互联网行业还是传统行业都已经积累了大量的数据，现在需要的就是从这些数据中提取有价值的信息，以便打造更好的产品或者为将来的决策提供支持。</p></blockquote><p>给初学者的几个建议：</p><ul><li>Make English as your working language. （让英语成为你的工作语言）</li><li>Practice makes perfect. （熟能生巧）</li><li>All experience comes from mistakes. （所有的经验都源于你犯过的错误）</li><li>Don’t be one of the leeches. （不要当伸手党）</li><li>Either outstanding or out. （要么出众，要么出局）</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 语言学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>见与不见</title>
      <link href="/2020/11/13/1/"/>
      <url>/2020/11/13/1/</url>
      
        <content type="html"><![CDATA[<h4 id="见与不见"><a href="#见与不见" class="headerlink" title="见与不见"></a>见与不见</h4><h5 id="你见，或者不见我"><a href="#你见，或者不见我" class="headerlink" title="你见，或者不见我"></a>你见，或者不见我</h5><h5 id="我就在那里"><a href="#我就在那里" class="headerlink" title="我就在那里"></a>我就在那里</h5><h5 id="不悲不喜"><a href="#不悲不喜" class="headerlink" title="不悲不喜"></a>不悲不喜</h5><h5 id="你念，或者不念我"><a href="#你念，或者不念我" class="headerlink" title="你念，或者不念我"></a>你念，或者不念我</h5><h5 id="情就在那里"><a href="#情就在那里" class="headerlink" title="情就在那里"></a>情就在那里</h5><h5 id="不来不去"><a href="#不来不去" class="headerlink" title="不来不去"></a>不来不去</h5><h5 id="你爱，或者不爱我"><a href="#你爱，或者不爱我" class="headerlink" title="你爱，或者不爱我"></a>你爱，或者不爱我</h5><h5 id="爱就在那里"><a href="#爱就在那里" class="headerlink" title="爱就在那里"></a>爱就在那里</h5><h5 id="不增不减"><a href="#不增不减" class="headerlink" title="不增不减"></a>不增不减</h5><h5 id="你跟，或者不跟我"><a href="#你跟，或者不跟我" class="headerlink" title="你跟，或者不跟我"></a>你跟，或者不跟我</h5><h5 id="我的手就在你手里"><a href="#我的手就在你手里" class="headerlink" title="我的手就在你手里"></a>我的手就在你手里</h5><h5 id="不舍不弃"><a href="#不舍不弃" class="headerlink" title="不舍不弃"></a>不舍不弃</h5><h5 id="来我的怀里"><a href="#来我的怀里" class="headerlink" title="来我的怀里"></a>来我的怀里</h5><h5 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h5><h5 id="让我住进你的心里"><a href="#让我住进你的心里" class="headerlink" title="让我住进你的心里"></a>让我住进你的心里</h5><h5 id="默然-相爱"><a href="#默然-相爱" class="headerlink" title="默然 相爱"></a>默然 相爱</h5><h5 id="寂静-欢喜"><a href="#寂静-欢喜" class="headerlink" title="寂静 欢喜"></a>寂静 欢喜</h5>]]></content>
      
      
      
        <tags>
            
            <tag> 诗文 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
