<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计网复习1</title>
      <link href="/2021/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A01/"/>
      <url>/2021/11/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A01/</url>
      
        <content type="html"><![CDATA[<h4 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h4><h4 id="计算机网络的定义"><a href="#计算机网络的定义" class="headerlink" title="计算机网络的定义"></a>计算机网络的定义</h4><p>计算机网络就是一些互联的、自治的计算机系统的集合。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113185456664.png" alt="image-20211113185456664"></p><h4 id="互联网的特点"><a href="#互联网的特点" class="headerlink" title="互联网的特点"></a>互联网的特点</h4><ol><li><p>连通性 connectivity </p><p>上网的用户可以交换信息。</p></li><li><p>共享 sharing</p><p>资源共享</p></li></ol><h4 id="互连网与互联网"><a href="#互连网与互联网" class="headerlink" title="互连网与互联网"></a>互连网与互联网</h4><ol><li><p>互连网(internet)：</p><p>多个计算机网络通过路由器互连而成的网络。</p><p>“网络的网络”(network of networks)</p></li><li><p>互联网(Internet)：</p><p>由众多网络相互连接而成的特定计算机网络。由美国阿帕网(ARPANET)发展而成，主要采用TCP/IP协议作为通信的规则。</p></li></ol><blockquote><p>任意将几个网络互连起来，并能够相互通信，构成的是互连网，而不是互联网。</p></blockquote><h4 id="网络的网络"><a href="#网络的网络" class="headerlink" title="网络的网络"></a>网络的网络</h4><ol><li><p>简单的网络</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113190815546.png" alt="image-20211113190815546"></p></li><li><p>由网络构成的互连网</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113190841984.png" alt="image-20211113190841984"></p></li></ol><blockquote><ol><li><p><strong>网络</strong>把许多计算机（主机）连接在一起。</p></li><li><p><strong>互连网</strong>将许多网络通过路由器连接在一起。</p></li></ol></blockquote><h4 id="互联网发展的三个阶段"><a href="#互联网发展的三个阶段" class="headerlink" title="互联网发展的三个阶段"></a>互联网发展的三个阶段</h4><ol><li><p>单个网络ARPANET(Advanced Research Project Agency Network)向互联网发展。</p><p>1983年，TCP/IP协议成为ARPANET上的标准协议，使得所有使用TCP/IP协议的计算机都能通过互连网相通信。</p></li><li><p>三级结构的互联网：</p><p>分为主干网、地区网、校园网。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113191643053.png" alt="image-20211113191643053"></p></li><li><p>多层次ISP结构的互联网</p><p>ISP：互联网服务提供者(Internet Service Provider)</p><p>机构和个人缴纳费用就可以从ISP获取IP地址的使用权，通过此ISP接入到互联网中。</p><p>ISP根据覆盖面积和IP地址数量分为：主干ISP、地区ISP、本地ISP</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113192037618.png" alt="image-20211113192037618"></p></li></ol><h5 id="互联网的标准化"><a href="#互联网的标准化" class="headerlink" title="互联网的标准化"></a>互联网的标准化</h5><p>互联网的标准化工作对于互联网发展起到了非常重要的作用。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113192344256.png" alt="image-20211113192344256"></p><p>ISOC：互联网协会 Internet Society</p><h4 id="互联网的组成"><a href="#互联网的组成" class="headerlink" title="互联网的组成"></a>互联网的组成</h4><ol><li><p>边缘部分：连接到互联网上的主机</p></li><li><p>核心部分：由大量网络和连接这些网络的路由器组成。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113192718137.png" alt="image-20211113192718137"></p></li></ol><blockquote><p>处在互联网边缘的部分就是连接在互联网上的所有主机，也称为端系统(end system).</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113194356305.png" alt="image-20211113194356305"></p></blockquote><h5 id="端系统的两种通信方式"><a href="#端系统的两种通信方式" class="headerlink" title="端系统的两种通信方式"></a>端系统的两种通信方式</h5><ol><li><p>客户服务器方式(C/S方式)</p><p>发送电子邮件、信息检索</p><p>客户是服务的<strong>请求方</strong>，服务器是服务的<strong>提供方</strong>。</p><p>客户端主动发起通信，必须知道服务器程序的地址。</p><p>服务器端程序不需要知道客户程序的地址。</p><p><strong>连接之后通信是双向的</strong></p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113195047679.png" alt="image-20211113195047679"></p></li><li><p>对等连接方式(P2P方式)</p><p>peer-to-peer</p><p>对等连接中每一个主机既是客户端又是服务端。可支持大量对等用户（如上百万个用户）同时工作。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113195824124.png" alt="image-20211113195824124"></p><h4 id="互联网上的核心部分"><a href="#互联网上的核心部分" class="headerlink" title="互联网上的核心部分"></a>互联网上的核心部分</h4><p>在网络核心部分起到特殊作用的是路由器(router)</p><p>路由器是实现<strong>分组交换</strong>(packet switching)的关键构件，任务是转发收到的分组，这是网络核心部分最重要的功能。</p><h4 id="三种交换方式"><a href="#三种交换方式" class="headerlink" title="三种交换方式"></a>三种交换方式</h4><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113201120973.png" alt="image-20211113201120973"></p></li><li><p>电路交换：</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113201544190.png" alt="image-20211113201544190"></p><p>交换特点：</p><ol><li><p>电路交换必定是<strong>面向连接</strong>的。</p></li><li><p>电路交换分为三个阶段：</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113201856347.png" alt="image-20211113201856347"></p><p>电路交换缺点：</p><p>通信利用率低，计算机数据具有突发性。</p></li><li><p>报文交换：</p></li><li><p>分组交换：</p><p>特点：</p><ol><li><p>采用<strong>存储转发</strong>的技术。</p></li><li><p>发送时，将较长的报文划分为较短的、固定长度的数据段，在每个数据段前添加<strong>首部</strong>构成<strong>分组</strong>。</p><p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113202902202.png" alt="image-20211113202902202"></p></li><li><p>分组交换的数据传输单元为”分组”也称”包”，首部也称为“包头”。依次以分组为单位将各分组发送到接收端。</p><p>每个分组的首部都包含地址（目的地址、源地址），节点交换机根据地址信息把分组转发到目的主机或下个交换机。</p></li><li><p>每个分组在互联网中独立地选择传输路径。用这样的存储转发的方式，最终分组就能到达目的主机。</p></li></ol></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testPicture</title>
      <link href="/2021/11/13/testPicture/"/>
      <url>/2021/11/13/testPicture/</url>
      
        <content type="html"><![CDATA[<p><img src="https://rainbow-blog.oss-cn-beijing.aliyuncs.com/img/image-20211113185004170.png" alt="image-20211113185004170"></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双目测距</title>
      <link href="/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D/"/>
      <url>/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%B5%8B%E8%B7%9D/</url>
      
        <content type="html"><![CDATA[<h3 id="双目摄像头测距"><a href="#双目摄像头测距" class="headerlink" title="双目摄像头测距"></a>双目摄像头测距</h3><h4 id="1-双目摄像头配置使用"><a href="#1-双目摄像头配置使用" class="headerlink" title="1.双目摄像头配置使用"></a>1.双目摄像头配置使用</h4><h4 id="2-测距原理"><a href="#2-测距原理" class="headerlink" title="2.测距原理"></a>2.测距原理</h4><h4 id="3-图片处理函数"><a href="#3-图片处理函数" class="headerlink" title="3.图片处理函数"></a>3.图片处理函数</h4>]]></content>
      
      
      <categories>
          
          <category> 智能小车 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方向控制</title>
      <link href="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="方向控制"><a href="#方向控制" class="headerlink" title="方向控制"></a>方向控制</h3><h4 id="1-含有车道线的图片（三张）"><a href="#1-含有车道线的图片（三张）" class="headerlink" title="1.含有车道线的图片（三张）"></a>1.含有车道线的图片（三张）</h4><blockquote><p>①居中</p><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/Users\402\Downloads\car.png" alt="car" style="zoom:25%;"><p>②偏左</p><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/Users\402\Downloads\car1.png" alt="car1" style="zoom:25%;"><p>③偏右</p><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/Users\402\Downloads\car2.png" alt="car2" style="zoom:25%;"></blockquote><h4 id="2-图像处理"><a href="#2-图像处理" class="headerlink" title="2.图像处理"></a>2.图像处理</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>image<span class="token punctuation">)</span>    <span class="token comment"># hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)  # 色彩空间转换为hsv，分离.</span>    <span class="token comment">#色相（H）是色彩的基本属性，就是平常所说的颜色名称，如红色、黄色等。</span>    <span class="token comment">#饱和度（S）是指色彩的纯度，越高色彩越纯，低则逐渐变灰，取0-100%的数值。</span>    <span class="token comment">#明度（V），取0-100%。</span>    <span class="token comment">#OpenCV中H,S,V范围是0-180,0-255,0-255</span>    <span class="token comment"># cv2.imshow("img",img)</span>    <span class="token comment"># cv2.waitKey(0)</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的高</span>        <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的宽</span>            px <span class="token operator">=</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span>            <span class="token comment"># print(px)    # 这样就能得到每个点的bgr值</span>            <span class="token keyword">if</span> px<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">255</span> <span class="token keyword">and</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">255</span><span class="token punctuation">:</span>                L1 <span class="token operator">=</span> y<span class="token comment">#白色的左边界</span>                <span class="token keyword">break</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的高</span>        <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 图片的宽</span>            px <span class="token operator">=</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span>            <span class="token comment"># print(px)    # 这样就能得到每个点的bgr值</span>            <span class="token keyword">if</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">255</span> <span class="token keyword">and</span> img<span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">255</span><span class="token punctuation">:</span>                L2 <span class="token operator">=</span> y<span class="token comment">#白色的右边界</span>                <span class="token keyword">break</span>    LH <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">2</span>    <span class="token comment"># print("L1: ",str(L1))</span>    <span class="token comment"># print("L2: ",str(L2))</span>    LV <span class="token operator">=</span> <span class="token punctuation">(</span>L1<span class="token operator">+</span>L2<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span> <span class="token comment">#白色的中间值</span>    <span class="token keyword">if</span> L2 <span class="token operator">&lt;=</span> LH<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"left"</span>    <span class="token keyword">elif</span> L1 <span class="token operator">>=</span> LH<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"right"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"center"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h4><img src="/2021/10/24/%E6%96%B9%E5%90%91%E6%8E%A7%E5%88%B6/ZB\计院2022\算法\OpencvCode\车道测试图片\结果1.png" alt="结果1" style="zoom:100%;"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""调节图片大小"""</span><span class="token keyword">import</span> cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'test01.png'</span><span class="token punctuation">)</span>scale_percent <span class="token operator">=</span> <span class="token number">60</span>width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> scale_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> scale_percent <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span>dim <span class="token operator">=</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>resized <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span>dim<span class="token punctuation">,</span>interpolation <span class="token operator">=</span> cv2<span class="token punctuation">.</span>INTER_AREA<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Resized image'</span><span class="token punctuation">,</span>resized<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitkey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 智能小车 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小车设计流程</title>
      <link href="/2021/10/24/%E5%B0%8F%E8%BD%A6%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/10/24/%E5%B0%8F%E8%BD%A6%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>小车启动-&gt;开始拍摄-&gt;<del>保存视频</del>-&gt;处理图片-&gt;返回方向信息</p><p>1.拍摄视频（每隔1ms处理一次）</p><blockquote><p>代码参考文档\OpencvCode\拍摄视频.md</p></blockquote><p>2.图片处理</p><blockquote><p>方案一参考文档\OpencvCode\方向控制.md</p><p>方案二<del>（双目测距）</del></p></blockquote><p>3.返回信息</p><p>每隔10张图片</p>]]></content>
      
      
      <categories>
          
          <category> 智能小车 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测距原理</title>
      <link href="/2021/10/24/%E6%B5%8B%E8%B7%9D%E5%8E%9F%E7%90%86/"/>
      <url>/2021/10/24/%E6%B5%8B%E8%B7%9D%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><strong>输入输出接口</strong></p><p>Input：</p><p>（1）左右两个摄像头采集的实时图像视频分辨率（整型int）</p><p>（2）左右两个摄像头采集的实时图像视频格式 （RGB，YUV，MP4等）</p><p>（3）摄像头标定参数（中心位置（x,y）和5个畸变</p><p>系数（2径向，2切向，1棱向），浮点型float）</p><p>（4）摄像头初始化参数（摄像头初始位置和三个坐标方向</p><p>的旋转角度，车辆宽度高度车速等等，浮点型float）</p><p>Output：</p><p>（1）左右两帧图像匹配的图像视频分辨率（整型int）</p><p>（2）左右两帧图像匹配的图像视频格式（RGB，YUV，MP4等）</p><p>（3）左右两帧图像image/video 匹配后的深度信息（浮点型float）</p><p>（4）目标物与摄像头的距离 （浮点型float）</p><p><strong>1.</strong> <strong>功能定义</strong></p><p><strong>双目测距实际操作分4个步骤</strong>：相机标定——双目校正——双目匹配——计算深度信息。</p><p><strong>相机标定：</strong>摄像头由于光学透镜的特性使得成像存在着径向畸变，可由三个参数k1,k2,k3确定；由于装配方面的误差，传感器与光学镜头之间并非完全平行，因此成像存在切向畸变，可由两个参数p1,p2确定。单个摄像头的定标主要是计算出摄像头的内参（焦距f和成像原点cx,cy、五个畸变参数（一般只需要计算出k1,k2,p1,p2，对于鱼眼镜头等径向畸变特别大的才需要计算k3））以及外参（标定物的世界坐标）。而双目摄像头定标不仅要得出每个摄像头的内部参数，还需要通过标定来测量两个摄像头之间的相对位置（即右摄像头相对于左摄像头的旋转矩阵R、平移向量t）。</p><p><strong>双目校正：</strong>双目校正是根据摄像头定标后获得的单目内参数据（焦距、成像原点、畸变系数）和双目相对位置关系（旋转矩阵和平移向量），分别对左右视图进行消除畸变和行对准，<strong>使得左右视图的成像原点坐标一致</strong>（CV_CALIB_ZERO_DISPARITY标志位设置时发生作用）、两摄像头光轴平行、左右成像平面共面、对极线行对齐。这样一幅图像上任意一点与其在另一幅图像上的对应点就必然具有相同的行号，只需在该行进行一维搜索即可匹配到对应点。<br><strong>双目匹配：</strong>双目匹配的作用是把同一场景在左右视图上对应的像点匹配起来，这样做的目的是为了得到视差图。双目匹配被普遍认为是立体视觉中最困难也是最关键的问题。得到视差数据，通过上述原理中的公式就可以很容易的计算出深度信息。</p><p><strong>2. 技术路线方案</strong></p><p>双目视觉广泛应用在机器人导航，精密工业测量、物体识别、虚拟现实、场景重建，勘测领域。</p><p>双目视觉是模拟人类视觉原理，使用计算机被动感知距离的方法。从两个或者多个点观察一个物体，获取在不同视角下的图像，根据图像之间像素的匹配关系，通过三角测量原理计算出像素之间的偏移来获取物体的三维信息。</p><p>它的物理原理是这样的，首先请看下图：</p><p><img src="https://pic1.zhimg.com/80/v2-e2fe1b96e23369a907195c14c569c240_720w.jpg" alt="img"></p><p>图1. 双目测距</p><p>如图1，P是待测物体上的某一点，OR与OT分别是两个相机的光心，点P在两个相机感光器上的成像点分别为P和P’（相机的成像平面经过旋转后放在了镜头前方），f为相机焦距，B为两相机中心距，Z为我们想求得的深度信息，设点P到点P’的距离为dis，则：</p><p><img src="https://pic3.zhimg.com/80/v2-23324632d2fa54460fac736baaae4d6a_720w.png" alt="img"></p><p>根据相似三角形原理：</p><p><img src="https://pic1.zhimg.com/80/v2-d1ed24def593a6255d058684fc0c4f18_720w.png" alt="img"></p><p>可得：</p><p><img src="https://pic4.zhimg.com/80/v2-baaf2aaa540bc2f96a07f1613d126a37_720w.png" alt="img"></p><p>公式中，焦距f和摄像头中心距B可通过标定得到，因此，只要获得了</p><p><img src="https://pic2.zhimg.com/80/v2-02e841c83582924c250f6e49796dd11d_720w.png" alt="img"></p><p>（即视差d）的值即可求得深度信息，即：</p><p><img src="https://pic3.zhimg.com/80/v2-3247e2031125661b811b5c1573278892_720w.png" alt="img"></p><p>假设目标点在左视图中的坐标为（x，y），在左右视图上形成的视差为d，目标点在以左摄像头光心为原点的世界坐标系中的坐标为（X，Y，Z），则存在所示的变换矩阵Q，使得</p><p><img src="https://pic2.zhimg.com/80/v2-b7ebb85e9a349f8cdd3f31b42fcd3cad_720w.png" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-0f191951ded8be1088d85f305653d247_720w.png" alt="img"></p><p>为了精确地求得某个点在三维空间里的距离Z，我们需要获得的参数有焦距f、视差d、摄像头中心距B。如果还需要获得X坐标和Y坐标的话，那么还需要额外知道左右像平面的坐标系与立体坐标系中原点的偏移cx和cy。其中f，d，cx和cy可以通过立体标定获得初始值，并通过立体校准优化，使得两个摄像头在数学上完全平行放置，并且左右摄像头的cx，cy和f相同。而立体匹配所做的工作，就是在之前的基础上，求取最后一个变量：视差d。从而最终完成求一个点三维坐标所需要的准备工作。在清楚了上述原理之后，我们也就知道了，所有的这几步：标定、校准和匹配，都是围绕着如何更精确地获得 f，d，B，cx 和cy 而设计的。</p><p>标定：摄像头标定一般都需要一个放在摄像头前的特制的标定参照物（棋盘纸），摄像头获取该物体的图像，并由此计算摄像头的内外参数。标定参照物上的每一个特征点相对于世界坐标系的位置在制作时应精确测定，世界坐标系可选为参照物的物体坐标系。在得到这些已知点在图像上的投影位置后，可计算出摄像头的内外参数。</p><p>校准与匹配：双目摄像头标定不仅要得出每个摄像头的内部参数，还需要通过标定来测量两个摄像头之间的相对位置。要计算目标点在左右两个视图上形成的视差，首先要把该点在左右视图上两个对应的像点匹配起来。然而，在二维空间上匹配对应点是非常耗时的，为了减少匹配搜索范围，我们可以利用极线约束使得对应点的匹配由二维搜索降为一维搜索。而双目校正的作用就是要把消除畸变后的两幅图像严格地行对应，使得两幅图像的对极线恰好在同一水平线上，这样一幅图像上任意一点与其在另一幅图像上的对应点就必然具有相同的行号，只需在该行进行一维搜索即可匹配到对应点。</p><p><img src="https://pic4.zhimg.com/80/v2-5351227dcb093590be7133743822a8eb_720w.jpg" alt="img"></p><p>图2. 双目校正与匹配</p><p><strong>3. 关键技术参数和性能指标</strong></p><p>利用双目摄像头的数据估计车辆和车辆距离。假设摄像头分辨率1280´720像素，焦距1458像素，角度误差小于0.5度。下表描述精度指标：</p><p><img src="https://pic2.zhimg.com/80/v2-6ecadb42e069aa2a077f101db2ddac19_720w.jpg" alt="img"></p><p>表1. 指标</p>]]></content>
      
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双目摄像头拍摄视频</title>
      <link href="/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%91%84%E5%83%8F%E5%A4%B4%E8%A7%86%E9%A2%91%E6%8B%8D%E6%91%84/"/>
      <url>/2021/10/24/%E5%8F%8C%E7%9B%AE%E6%91%84%E5%83%8F%E5%A4%B4%E8%A7%86%E9%A2%91%E6%8B%8D%E6%91%84/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">GetvideoAndProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">"""调用摄像头读取视频，并逐帧保存图片"""</span>capture <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CAP_DSHOW<span class="token punctuation">)</span><span class="token comment">#捕获序号为0的摄像头</span>capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">1280</span><span class="token punctuation">)</span>capture<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">)</span>timecount <span class="token operator">=</span> <span class="token number">2</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>ret<span class="token punctuation">,</span>frame <span class="token operator">=</span> capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">#逐帧读取</span>frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>frame<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>picture_name <span class="token operator">=</span> <span class="token string">"test"</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>timecount<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"video"</span><span class="token punctuation">,</span>frame<span class="token punctuation">)</span>       <span class="token comment">#显示</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>picture_name<span class="token punctuation">,</span> frame<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>picture_name<span class="token operator">+</span><span class="token string">"保存成功"</span><span class="token punctuation">)</span>timecount <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>timecount<span class="token punctuation">)</span><span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token punctuation">:</span><span class="token comment">#在2s的时间内等待用户按键触发关闭</span>capture<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 智能小车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python简易配置及笔记</title>
      <link href="/2021/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="Python简易配置"><a href="#Python简易配置" class="headerlink" title="Python简易配置"></a>Python简易配置</h3><blockquote><p>官网链接：<a href="https://www.anaconda.com/products/individual#Downloads">https://www.anaconda.com/products/individual#Downloads</a></p><p><img src="/2021/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/01/14/python%E7%AE%80%E6%98%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%AC%94%E8%AE%B0/4.png"></p><p>各种版本供你选择QAQ</p></blockquote><h3 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h3><blockquote><p><a href="https://github.com/jackfrued/Python-100-Days">https://github.com/jackfrued/Python-100-Days</a></p></blockquote><blockquote><p>摘自<a href="https://github.com/jackfrued%E7%9A%84%E5%88%86%E4%BA%AB">https://github.com/jackfrued的分享</a></p><p>作为一名Python开发者，根据个人的喜好和职业规划，可以选择的就业领域也非常多。</p><ul><li>Python后端开发工程师（服务器、云平台、数据接口）</li><li>Python运维工程师（自动化运维、SRE、DevOps）</li><li>Python数据分析师（数据分析、商业智能、数字化运营）</li><li>Python数据挖掘工程师（机器学习、深度学习、算法专家）</li><li>Python爬虫工程师</li><li>Python测试工程师（自动化测试、测试开发）</li></ul><blockquote><p><strong>说明</strong>：目前，<strong>数据分析是一个非常热门的方向</strong>，因为不管是互联网行业还是传统行业都已经积累了大量的数据，现在需要的就是从这些数据中提取有价值的信息，以便打造更好的产品或者为将来的决策提供支持。</p></blockquote><p>给初学者的几个建议：</p><ul><li>Make English as your working language. （让英语成为你的工作语言）</li><li>Practice makes perfect. （熟能生巧）</li><li>All experience comes from mistakes. （所有的经验都源于你犯过的错误）</li><li>Don’t be one of the leeches. （不要当伸手党）</li><li>Either outstanding or out. （要么出众，要么出局）</li></ul></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 语言学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>见与不见</title>
      <link href="/2020/12/14/1/"/>
      <url>/2020/12/14/1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="059175e6bff8bcd6796cf8609698a2e245af4f4eb83f5ca6e0f4b9e5494bc9ab">2d4b5bc07200158de9164b6b04fd2a0b86aa087283747f4016f830cfcefa2c213f04b679f73c6207533a4f23386707ae3040f32d93b024e7c0768c2395067680738f37e96c3f612b469d52280e23dda286d3352dd2957936ec84a2d853997bacaa15b548d6ae41ea54418d567a64f42990c7783f87dec5fe8fe28d770d61d8c74b6fca0d93d31f830f69cd66bc016e08374c9c729f3e95f7af20f8f0c9dd5ab2605b1cf499a33a970147e830ae1e7c37d1928c6085fb479a152f67180bd993762d7551c2eca9e935b05a8533eec9d11c1cc6f02450f37887c969a6a866ca8c0645978483702b3ca029144dd55aff460eb5861b738f1a5267179d5a7bff73fab9f7ce9a13d2464695a2c691699746e0c8a344875adef792a01a2d6c93c549cb6af2cdadfcf3e0418ed87de32ce92b7b4e9283f26ccd99cdab609bd4e058e2bad8f0c31ba6a4709d9c4ad5670800f143089925a8356337f877d9253e0e41ab85e5d73c718ceda4aa052ce410d1d4394e83c89eec25b5aaefd8c54ab4dd3dda8b7ebc68d0c2def273188324cc746a1b4127a74132027e193a120a5adaa804cb0080f90271ecb4b04d7dbeb3c0cdcc009e31b09120d0f1e1839ad3f9aa1b9eb5637f9abf026fdd448094de8e4be68b7a1b117b3124458a50b93b47f78febee51e777feee01ea9d44eb2a0e2c5dc9e91f0579d065efa0f56464f7b54f5af13ae8815941d21832bf50d56f5486d15eafbb9e79f11a845ba2653f140201cdc2207aa06e6facc262b654f06d6f7c188338f3f1c7db00d37afb784807d02446e3e2685fe7db3d7fe1c9adc51e2acf777398caedb1dc47e68644896de22102613351b04c54bc78120ed8d1bd8b8ce2c54ed5e2e26859e4e9e7e494b5c12a894de8d964d6e941e0995f34433d3974409331fb8977c9170f6167fe312ca5ad4e72ee1ecdc420a50aac22a91bd7e8ccb78712c3a9294a70df8f81150a5b7612bac21630e3dff4ac2a732b6c44ae4a313a5fd33c57b1d88b6996b0c607cb8fb3b2f637f7bbe09b87ff4bae31818fe93c75fe5224a1d623c1be0dbee6f83c27290ece8b05f166ddd9964eb04d19465d3160eb572d5a82cc52f2a97f967316b275409f816f1cddccd24f89142269442ed0108a41d5864287f89abe2e7d41f07b0b6de350546ff843b07475b660b6e664a366e98e787e9219fb2f09113031643811c9821175ada1ef988c83fe025a6a29e7352f758cb3be4c3baac1c69947adb7ba180a68147bb6686365462929a1aad863ad0ad6e3c8ef4d1367afec1a06fb288a13bee6c83632f542396245fff75243a429106e094b07f1f1e7c2477ee850a6170352febc235689b64e93602c8bae5127a087c51e3f933c7a525596cbb9369ced39968c203daa4439c81908290ed7605d510a5c45f6004124b6a5dc4370e9b4c39c56f8b66bb417d53c60098a1ab3814f6ee1c7358ef11155a73f7cf857755bd66443e773878592b572181a9c39d3fd81d0b4df709c1820b62eab9b729b578eeffcc85132a3af27852ae0520154da4b080c2fd1c25f759c830272a51cdaeacb59d554ecd6eca96472c50a9378f8a08d24a8a5ffb2ddfdba90540813b4de2b97a5ff45dd996307c49f74773286ff099bd1da82d1971d960be166becf78011fefb77af1988b51f2368564515ecc57b136176fe8f19185703c160363b44f46268abe0678d4453a8c777c7d96c598b6f378ad8bda4880839849c450c8b6640b4ca1a4183ad3bdb34eff86db6f473dc78354c86e8881b9aaffd4ba1723209a9237358e8f7c859ef648cc92a68b0f54ee79085fea26b7cd27272777bfd32c8e4fd22882e9666ff8332ef3b025b753f6bb6a7d06bea861b15a9a5e17adfe4df4a24f5a18f2fb1ba41ba5ffe188d5ecc6fd6c08cee56df3d8cb3802111307750529ab5335c5384cd20320657892f53e7f1b26b4548cd21404686dbb73136df69bf0a9a1cf7f93f4181cc5638a0d072063a1e9d10f62e88c19227ab7145f149a75eeb47e1a3e052f5a750dd597126fb3248a3653ef17894d3873e1b00691917ffbaf948d15dbea2e7e77f4c0a5f886bbdd5a441ad8d6b7eecaf75981af84c3b479352543e33b68e9b998f8c3084aa35e7c88f4446d3173f0bcab6885a90f36461990330bd58efa1c4e8007b3b930f113a1edb9b2930d310eb5c04152e11f8bcc413a7337d3baeff91f4aec7975b3bdf8e69e37d8ff24cf4dbdfeb4c2d4b66a01f07ab47bfabebd9c9ca8f829c86fc004420b3c358d02f911a7fe0deebf3a4ee265e1a23b3f1680f3f05cd5c7ae8706e60259c36a9437e1f61e90d48a6c25f5fb80608e0015176f30ba8be4852aad1f113a1364178149498e98a5a0baa8ef991d2b619280d9f246cf43c22d215e587ab5f9814c4c50a42eba85778ba6d58af06a682a7172230369434f028ca3f4a58af27a1e30b55ce5f89c6561a8612283da6d9b631463a15f96585c143b67ebc71ea4b0e5224dd86c9365ccbdf6d10018d6126ef1c4cb22da655f8856a6994bef122d7a8d4ab5838e1acba7117b17b52c45d9f4efe0f36d76d282c17f274ef2276e1f97c085b15800554c401e24b9784ed1bb83bd4748613b11b672b34a4e8cac993ca2b6b919f02c0c3fc9a90c98e2f3fe3b9276e947263c1fe8739df42d688399460b12e0924b9124826a0c80b180ad00a4e150d85f22b41e979a70d746bb0a21988fe675b56ec9ed59890df2375434424dea3c662a1d4882f62c2db056585d0e0af101936b71ba1cac466fa56a8cc987301c32cdc3b64aaabd0c311c62a59cd91413d7ada80466b04be9896c178e097d389a5030c31b7fe54f2b2b13e3a45e22ecec55b4c6121e4f244190e86447a33f0a6f3426ebbb488b5d82a412b171e40568b5390ab606102b943a73844c81a362c1d4238b83e2957b66353e831d4903668215ccc4e948107eb9414850dcce21f510846650d18473d4487690176c1faf9edf780033b5c4ebc12eb119f5ee99dcd2fa285f30d60aad6122a368d87558688fb033f1df22a06ea4e0efdbf171e1378a66238da63fcb2a3590b8d94b4ccdf11185149db8b4bb27897a480ad163da6522c41ac6595482261901c1cf16421a31b9e376c2504b3b6c25ce6b50415cf15de05de577ebe56550816ce979ea1ba7921dcf13b2c80bc33684efadb7958738ba2cdc09283c4817a775ef654ed773</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 诗文 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
